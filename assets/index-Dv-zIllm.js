(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))c(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&c(n)}).observe(document,{childList:!0,subtree:!0});function s(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(o){if(o.ep)return;o.ep=!0;const r=s(o);fetch(o.href,r)}})();const u=JSON.parse(localStorage.getItem("collection"))||[];console.debug("[Init] Loaded collection:",u);window._cardMap=window._cardMap||{};function E(){try{const e=JSON.parse(localStorage.getItem("decks"))||{};return console.debug("[getDecks] Loaded decks:",e),e}catch(e){return console.error("[getDecks] Error loading decks:",e),{}}}function C(e){try{localStorage.setItem("decks",JSON.stringify(e)),console.debug("[saveDecks] Saved decks:",e)}catch(t){console.error("[saveDecks] Error saving decks:",t)}}function R(){try{const e=localStorage.getItem("apiKey");return console.debug("[getApiKey] API key:",e?"(present)":"(missing)"),e}catch(e){return console.error("[getApiKey] Error:",e),null}}function A(e){var t,s;try{const c=e.id,o=e.name,r=e.image||((t=e.images)==null?void 0:t.large)||"",n=e.setName||((s=e.set)==null?void 0:s.name)||"";B(c,o,r,n,e),console.debug("[addToCollectionFromCardObject] Added:",e)}catch(c){console.error("[addToCollectionFromCardObject] Error:",c,e)}}window.addToCollectionFromCardObject=A;document.getElementById("cardForm").addEventListener("submit",async e=>{e.preventDefault();const t=R(),s=document.getElementById("cardName").value,c=document.getElementById("loadingSpinner"),o=document.getElementById("result");let r=document.getElementById("apiKeyAlert");if(t)r&&r.remove();else if(!r){r=document.createElement("div"),r.id="apiKeyAlert",r.style.background="#ffdddd",r.style.color="#a00",r.style.border="1px solid #a00",r.style.padding="8px 12px",r.style.margin="10px 0",r.style.borderRadius="4px",r.style.fontWeight="bold",r.textContent="No API key found. You can use the app, but you may be rate-limited or blocked. Please set an API key in Settings for best results.";const i=document.getElementById("collectionSearch");i&&i.parentElement&&i.parentElement.insertBefore(r,i.nextSibling)}o.classList.add("fade-out"),setTimeout(()=>{c.classList.add("show"),o.innerHTML=""},400);let n=!1;try{await new Promise(h=>setTimeout(h,400)),c.classList.add("show"),n=!0,o.innerHTML="";let i={};t&&(i["X-Api-Key"]=t),console.debug("[Card Search] Searching for:",s,"Headers:",i);const d=await fetch(`https://api.pokemontcg.io/v2/cards?q=name:${encodeURIComponent(s)}`,{headers:i});if(!d.ok)throw new Error("Card not found or an error occurred.");const m=(await d.json()).data;console.debug("[Card Search] Results:",m),setTimeout(()=>{m.length===0?o.innerHTML=`<p>No cards found with the name "${s}".</p>`:M(m,"result",!1),o.classList.remove("fade-out"),o.classList.add("fade-in"),setTimeout(()=>o.classList.remove("fade-in"),400)},200)}catch(i){setTimeout(()=>{o.innerHTML=`<p>Error: ${i.message}</p>`,o.classList.remove("fade-out"),o.classList.add("fade-in"),setTimeout(()=>o.classList.remove("fade-in"),400)},200),console.error("[Card Search] Error:",i)}finally{n?c.classList.remove("show"):setTimeout(()=>c.classList.remove("show"),400)}});function K(){try{const e=document.getElementById("collectionFilter");if(!e)return;const t=e.value,s=Array.from(new Set(u.map(r=>r.setName).filter(Boolean))).sort(),c=Array.from(e.options).map(r=>r.value),o=[""].concat(s);JSON.stringify(c)!==JSON.stringify(o)&&(e.innerHTML='<option value="">All Sets</option>'+s.map(r=>`<option value="${r}">${r}</option>`).join("")),e.value=t,Array.from(e.options).some(r=>r.value===t)||(e.value=""),console.debug("[populateSetFilter] Sets:",s,"Selected:",e.value)}catch(e){console.error("[populateSetFilter] Error:",e)}}function H(){var e,t,s,c,o,r;try{const n=((e=document.getElementById("collectionSearch"))==null?void 0:e.value.trim().toLowerCase())||"",i=((t=document.getElementById("collectionSort"))==null?void 0:t.value)||"name-asc",d=((s=document.getElementById("collectionFilter"))==null?void 0:s.value)||"",f=((c=document.getElementById("collectionTypeFilter"))==null?void 0:c.value)||"",m=((o=document.getElementById("collectionRarityFilter"))==null?void 0:o.value)||"",h=((r=document.getElementById("collectionHpFilter"))==null?void 0:r.value)||"";let v=u.filter(l=>(!n||l.name.toLowerCase().includes(n)||l.setName&&l.setName.toLowerCase().includes(n))&&(!d||l.setName===d)&&(!f||l.types&&l.types.includes(f))&&(!m||l.rarity===m)&&(!h||h==="0-60"&&Number(l.hp)<=60||h==="61-100"&&Number(l.hp)>60&&Number(l.hp)<=100||h==="101-"&&Number(l.hp)>100));switch(i){case"name-asc":v.sort((l,y)=>l.name.localeCompare(y.name));break;case"name-desc":v.sort((l,y)=>y.name.localeCompare(l.name));break;case"count-desc":v.sort((l,y)=>(y.count||1)-(l.count||1));break;case"count-asc":v.sort((l,y)=>(l.count||1)-(y.count||1));break}return console.debug("[getSortedFilteredCollection] Filtered:",v),v}catch(n){return console.error("[getSortedFilteredCollection] Error:",n),[]}}function j(){try{const e=document.getElementById("collectionTypeFilter");if(e){const s=e.value,c=Array.from(new Set(u.flatMap(n=>n.types||[]))).sort(),o=Array.from(e.options).map(n=>n.value),r=[""].concat(c);JSON.stringify(o)!==JSON.stringify(r)&&(e.innerHTML='<option value="">All Types</option>'+c.map(n=>`<option value="${n}">${n}</option>`).join("")),e.value=s,Array.from(e.options).some(n=>n.value===s)||(e.value=""),console.debug("[populateTypeAndRarityFilters] Types:",c,"Selected:",e.value)}const t=document.getElementById("collectionRarityFilter");if(t){const s=t.value,c=Array.from(new Set(u.map(n=>n.rarity).filter(Boolean))).sort(),o=Array.from(t.options).map(n=>n.value),r=[""].concat(c);JSON.stringify(o)!==JSON.stringify(r)&&(t.innerHTML='<option value="">All Rarities</option>'+c.map(n=>`<option value="${n}">${n}</option>`).join("")),t.value=s,Array.from(t.options).some(n=>n.value===s)||(t.value=""),console.debug("[populateTypeAndRarityFilters] Rarities:",c,"Selected:",t.value)}}catch(e){console.error("[populateTypeAndRarityFilters] Error:",e)}}function g(){try{K(),j(),M(H(),"collectionContent",!0),console.debug("[renderCollectionWithControls] Rendered collection")}catch(e){console.error("[renderCollectionWithControls] Error:",e)}}try{document.getElementById("collectionSearch").addEventListener("input",g),document.getElementById("collectionSort").addEventListener("change",g),document.getElementById("collectionFilter").addEventListener("change",g),document.getElementById("collectionTypeFilter").addEventListener("change",g),document.getElementById("collectionRarityFilter").addEventListener("change",g),document.getElementById("collectionHpFilter").addEventListener("change",g),document.getElementById("massEditBtn").addEventListener("click",()=>{k=!0,p.clear(),g(),console.debug("[massEditBtn] Mass edit mode enabled")})}catch(e){console.error("[EventListeners] Error:",e)}document.body.addEventListener("click",function(e){if(e.target.classList.contains("add-to-collection-btn")){const t=e.target.getAttribute("data-cardkey"),s=window._cardMap[t];s&&A(s),x()}if(e.target.classList.contains("show-deck-selection-btn")){const t=e.target.getAttribute("data-cardkey"),s=window._cardMap[t];s&&O(s)}});function B(e,t,s,c,o){try{const r=u.find(n=>n.id===e);if(r)r.count+=1,console.debug("[addToCollection] Incremented count for:",e);else{const n={...o||{},id:e,name:t,image:s,setName:c,count:1};u.push(n),console.debug("[addToCollection] Added new card:",n)}localStorage.setItem("collection",JSON.stringify(u)),g()}catch(r){console.error("[addToCollection] Error:",r,e,t,s,c,o)}}function q(e){try{const t=u.find(s=>s.id===e);if(t)if(t.count>1)t.count-=1,console.debug("[removeFromCollection] Decremented count for:",e);else{const s=u.findIndex(c=>c.id===e);u.splice(s,1),console.debug("[removeFromCollection] Removed card:",e)}localStorage.setItem("collection",JSON.stringify(u)),g()}catch(t){console.error("[removeFromCollection] Error:",t,e)}}function P(e){try{const t=E();if(!e){alert("Please enter a valid deck name.");return}if(t[e]){alert("A deck with this name already exists.");return}t[e]=[],C(t),b(),console.debug("[createDeck] Created deck:",e)}catch(t){console.error("[createDeck] Error:",t,e)}}function T(e,t){try{const s=E();if(!s[e]){alert("Deck not found.");return}const c=s[e];if(c.reduce((n,i)=>n+(i.count||1),0)>=60){alert("Deck limit reached! You cannot have more than 60 cards in a deck.");return}const r=c.find(n=>n.id===t.id);r?(r.count=(r.count||1)+1,console.debug("[addToDeck] Incremented count for:",t.id,"in deck:",e)):(c.push({...t,count:1}),console.debug("[addToDeck] Added new card to deck:",t,e)),C(s),alert(`Added ${t.name} to ${e}!`),b()}catch(s){console.error("[addToDeck] Error:",s,e,t)}}function N(e,t){try{const s=E();if(!s[e]){alert("Deck not found.");return}const c=s[e].find(o=>o.id===t);if(c)if(c.count>1)c.count-=1,console.debug("[removeFromDeck] Decremented count for:",t,"in deck:",e);else{const o=s[e].findIndex(r=>r.id===t);s[e].splice(o,1),console.debug("[removeFromDeck] Removed card:",t,"from deck:",e)}C(s),b()}catch(s){console.error("[removeFromDeck] Error:",s,e,t)}}function F(e){try{const t=E();confirm(`Are you sure you want to delete the deck "${e}"?`)&&(delete t[e],C(t),b(),console.debug("[deleteDeck] Deleted deck:",e))}catch(t){console.error("[deleteDeck] Error:",t,e)}}function b(){try{const e=E(),t=document.getElementById("deckList");if(!t)return;t.innerHTML="",Object.keys(e).forEach(s=>{const c=document.createElement("div");c.classList.add("deck");const o=document.createElement("h3");o.textContent=s;const r=document.createElement("button");r.textContent="Delete Deck",r.classList.add("delete-deck"),r.addEventListener("click",()=>F(s));const n=document.createElement("div");n.classList.add("card-list"),e[s].forEach(i=>{const d=document.createElement("div");d.classList.add("deck-card"),d.innerHTML=`
          <img src="${i.image}" alt="${i.name}" class="card-image">
          <button onclick="removeFromDeck('${s}', '${i.id}')">Remove</button>
        `,n.appendChild(d)}),c.appendChild(o),c.appendChild(r),c.appendChild(n),t.appendChild(c)}),console.debug("[renderDeckList] Rendered decks")}catch(e){console.error("[renderDeckList] Error:",e)}}document.body.addEventListener("click",function(e){if(e.target.classList.contains("add-to-deck-btn")){const t=e.target.getAttribute("data-deck"),s=e.target.getAttribute("data-cardkey"),c=window._cardMap[s];c&&T(t,c),S()}});let k=!1,p=new Set;function M(e,t,s){try{const c=document.getElementById(t);if(c.innerHTML="",e.forEach((o,r)=>{var i,d,f;const n=document.createElement("div");n.classList.add(s?"collection-card":"card"),s&&k?(n.style.position="relative",p.has(o.id)?n.classList.add("mass-edit-selected"):n.classList.remove("mass-edit-selected"),n.innerHTML=`
          <input type="checkbox" class="mass-edit-checkbox" data-id="${o.id}" style="position:absolute;left:8px;top:8px;z-index:2;" ${p.has(o.id)?"checked":""}>
          <img src="${o.image||((i=o.images)==null?void 0:i.large)}" alt="${o.name}" class="card-image">
          <input type="number" min="1" value="${o.count||1}" class="mass-edit-qty" data-id="${o.id}" style="width:40px;margin-top:8px;display:block;margin-left:auto;margin-right:auto;">
          <div class="card-count">x${o.count||1}</div>
        `,n.addEventListener("click",m=>{m.target.classList.contains("mass-edit-checkbox")||m.target.classList.contains("mass-edit-qty")||(p.has(o.id)?(p.delete(o.id),n.classList.remove("mass-edit-selected"),n.querySelector(".mass-edit-checkbox").checked=!1):(p.add(o.id),n.classList.add("mass-edit-selected"),n.querySelector(".mass-edit-checkbox").checked=!0))}),n.querySelector(".mass-edit-checkbox").addEventListener("change",function(m){this.checked?(p.add(o.id),n.classList.add("mass-edit-selected")):(p.delete(o.id),n.classList.remove("mass-edit-selected")),m.stopPropagation()})):s?(n.innerHTML=`
          <img src="${o.image||((f=o.images)==null?void 0:f.large)}" alt="${o.name}" class="card-image">
          ${o.count>1?`<div class="card-count">x${o.count}</div>`:'<div class="card-count">x1</div>'}
        `,n.addEventListener("click",m=>{m.stopPropagation(),D(o)})):(n.classList.add("card-flip-container"),n.style.width="180px",n.style.height="260px",n.innerHTML=`
          <div class="card-flip">
            <div class="card-front">
              <img src="${o.image||((d=o.images)==null?void 0:d.large)}" alt="${o.name}" class="card-image" style="width:100%;height:100%;">
            </div>
            <div class="card-back">
              <img src="https://images.pokemontcg.io/cardback/POKEMON_CARD_BACK.jpg" alt="Card Back" class="card-image" style="width:100%;height:100%;">
            </div>
          </div>
        `,setTimeout(()=>{n.querySelector(".card-flip").classList.add("flipped")},200+r*120),n.addEventListener("click",m=>{m.stopPropagation(),D(o)})),c.appendChild(n)}),s&&k){let o=document.getElementById("massEditControls");o||(o=document.createElement("div"),o.id="massEditControls",o.style="text-align:center;margin:16px 0;",o.innerHTML=`
          <button id="massDeleteBtn" style="margin-right:10px;">Delete Selected</button>
          <button id="massSaveBtn">Save Quantities</button>
          <button id="massEditCancelBtn" style="margin-left:10px;">Cancel</button>
        `,c.parentElement.insertBefore(o,c)),document.getElementById("massDeleteBtn").onclick=()=>{for(const r of p){const n=u.findIndex(i=>i.id===r);n!==-1&&u.splice(n,1)}p.clear(),k=!1,localStorage.setItem("collection",JSON.stringify(u)),g(),console.debug("[massDeleteBtn] Deleted selected cards")},document.getElementById("massSaveBtn").onclick=()=>{document.querySelectorAll(".mass-edit-qty").forEach(r=>{const n=r.getAttribute("data-id"),i=Math.max(1,parseInt(r.value,10)||1),d=u.find(f=>f.id===n);d&&(d.count=i)}),k=!1,localStorage.setItem("collection",JSON.stringify(u)),g(),console.debug("[massSaveBtn] Saved quantities")},document.getElementById("massEditCancelBtn").onclick=()=>{k=!1,p.clear(),g(),console.debug("[massEditCancelBtn] Cancelled mass edit")},c.querySelectorAll(".mass-edit-checkbox").forEach(r=>{r.addEventListener("change",function(){const n=this.getAttribute("data-id");this.checked?p.add(n):p.delete(n)})})}else{const o=document.getElementById("massEditControls");o&&o.remove()}console.debug("[renderCards] Rendered cards:",e.length,"to",t)}catch(c){console.error("[renderCards] Error:",c,e,t,s)}}const J={Grass:"https://archives.bulbagarden.net/media/upload/thumb/2/2e/Grass-attack.png/38px-Grass-attack.png",Fire:"https://archives.bulbagarden.net/media/upload/thumb/a/ad/Fire-attack.png/38px-Fire-attack.png",Water:"https://archives.bulbagarden.net/media/upload/thumb/1/11/Water-attack.png/38px-Water-attack.png",Lightning:"https://archives.bulbagarden.net/media/upload/thumb/0/04/Lightning-attack.png/38px-Lightning-attack.png",Psychic:"https://archives.bulbagarden.net/media/upload/thumb/e/ef/Psychic-attack.png/38px-Psychic-attack.png",Fighting:"https://archives.bulbagarden.net/media/upload/thumb/4/48/Fighting-attack.png/38px-Fighting-attack.png",Darkness:"https://archives.bulbagarden.net/media/upload/thumb/a/ab/Darkness-attack.png/38px-Darkness-attack.png",Metal:"https://archives.bulbagarden.net/media/upload/thumb/6/64/Metal-attack.png/38px-Metal-attack.png",Fairy:"https://archives.bulbagarden.net/media/upload/thumb/4/40/Fairy-attack.png/38px-Fairy-attack.png",Dragon:"https://images.pokemontcg.io/sv1/symbol-dragon.png",Colorless:"https://archives.bulbagarden.net/media/upload/thumb/1/1d/Colorless-attack.png/30px-Colorless-attack.png"};function L(e,t=18){const s=J[e];return s?`<img src="${s}" alt="${e}" title="${e}" style="width:${t}px;height:${t}px;vertical-align:middle;">`:e}function $(e){return e?e.replace(/\[([A-Za-z]+)\]/g,(t,s)=>L(s)):""}function D(e){var t,s;try{document.querySelectorAll(".info-box, .info-overlay").forEach(a=>a.remove());const c=document.createElement("div");c.className="info-overlay",c.addEventListener("click",x),document.body.appendChild(c);const o=e.hp?`${e.hp}`:"—",r=e.types?e.types.join(", "):"—",n=e.subtypes?e.subtypes.join(", "):"",i=e.rarity||"";let d="";Array.isArray(e.abilities)&&e.abilities.length>0&&(d=e.abilities.map(a=>`
          <div style="margin-bottom:10px; padding-left:4px; border-left:2px solid #4bb;">
            <div><strong style="color:${a.type&&a.type.toLowerCase()==="ability"?"#e33":"#197"};">${a.type||"Ability"}: ${a.name}</strong></div>
            <div style="font-size:0.95em; color:#555;">${$(a.text||"")}</div>
          </div>
        `).join(""));let f="—";Array.isArray(e.attacks)&&e.attacks.length>0&&(f=e.attacks.map(a=>`
        <div style="margin-bottom:10px; padding-left:4px; border-left:2px solid #eee;">
          <div>
            <strong>${a.name}</strong>
            ${a.cost&&a.cost.length?a.cost.map(w=>L(w)).join(" "):""}
          </div>
          ${a.damage?`<div><strong>Damage:</strong> ${a.damage}</div>`:""}
          ${a.convertedEnergyCost!==void 0?`<div><strong>Energy Cost:</strong> ${a.convertedEnergyCost}</div>`:""}
          ${a.text?`<div style="font-size:0.95em; color:#bbb;">${$(a.text)}</div>`:""}
        </div>
      `).join(""));const m=Array.isArray(e.weaknesses)&&e.weaknesses.length>0?e.weaknesses.map(a=>`${L(a.type)} (${a.value})`).join(" "):"—",h=Array.isArray(e.resistances)&&e.resistances.length>0?e.resistances.map(a=>`${L(a.type)} (${a.value})`).join(" "):"—",v=Array.isArray(e.retreatCost)&&e.retreatCost.length>0?e.retreatCost.map(a=>L(a)).join(" "):e.retreatCost===0?"0":"—",l=e.id+"_"+Math.random().toString(36).slice(2);window._cardMap[l]=e;const y=document.createElement("div");y.classList.add("info-box"),y.innerHTML=`
      <div style="display: flex; gap: 32px; align-items: flex-start; min-width: 420px; max-width: 700px;">
        <div style="flex: 0 0 40%; display: flex; justify-content: center;">
          <img src="${e.image||((t=e.images)==null?void 0:t.large)}" alt="${e.name}" style="display:block; max-width:100%; max-height:380px; width:auto; height:auto; border-radius:10px; box-shadow:0 2px 16px rgba(0,0,0,0.18);">
        </div>
        <div style="flex: 1 1 60%; min-width: 200px;">
          <h3 style="margin-top:0;">${e.name}</h3>
          <p><strong>Set:</strong> ${e.setName||((s=e.set)==null?void 0:s.name)||""}</p>
          ${n?`<p><strong>Subtype:</strong> ${n}</p>`:""}
          ${i?`<p><strong>Rarity:</strong> ${i}</p>`:""}
          <p><strong>HP:</strong> ${o}</p>
          <p><strong>Type:</strong> ${r}</p>
          ${d?`<div><strong>Abilities:</strong></div>${d}`:""}
          <div><strong>Attacks:</strong></div>
          ${f}
          <p><strong>Weaknesses:</strong> ${m}</p>
          <p><strong>Resistances:</strong> ${h}</p>
          <p><strong>Retreat Cost:</strong> ${v}</p>
          <div class="info-box-buttons" style="margin-top:16px;">
            <button class="add-to-collection-btn" data-cardkey="${l}">Add to Collection</button>
            <button class="show-deck-selection-btn" data-cardkey="${l}">Add to Deck</button>
            ${u.find(a=>a.id===e.id)?`<button onclick="removeFromCollection('${e.id}')">Delete from Collection</button>`:""}
          </div>
          <button onclick="closeInfoBox()" style="margin-top:14px;">Close</button>
        </div>
      </div>
    `,document.body.appendChild(y),setTimeout(()=>{c.classList.add("show"),y.classList.add("show")},10),console.debug("[showInfoBox] Displayed info for card:",e)}catch(c){console.error("[showInfoBox] Error:",c,e)}}function x(){try{document.querySelectorAll(".info-box, .info-overlay").forEach(e=>{e.classList.remove("show"),setTimeout(()=>e.remove(),300)}),console.debug("[closeInfoBox] Closed info box")}catch(e){console.error("[closeInfoBox] Error:",e)}}function O(e){try{x();const t=E(),s=Object.keys(t);if(s.length===0){alert("No decks available. Please create a deck first.");return}document.querySelectorAll(".overlay, .deck-selection-box").forEach(n=>n.remove());const c=document.createElement("div");c.classList.add("overlay"),c.addEventListener("click",S),document.body.appendChild(c);const o=e.id+"_"+Math.random().toString(36).slice(2);window._cardMap[o]=e;const r=document.createElement("div");r.classList.add("deck-selection-box"),r.innerHTML=`
      <h4>Select a Deck</h4>
      ${s.map(n=>`<button class="add-to-deck-btn" data-deck="${n}" data-cardkey="${o}">${n}</button>`).join("")}
      <button onclick="closeDeckSelection()">Cancel</button>
    `,document.body.appendChild(r),setTimeout(()=>{c.classList.add("show"),r.classList.add("show")},10),console.debug("[showDeckSelection] Showing for card:",e)}catch(t){console.error("[showDeckSelection] Error:",t,e)}}function S(){try{document.querySelectorAll(".overlay, .deck-selection-box").forEach(e=>{e.classList.remove("show"),setTimeout(()=>e.remove(),300)}),console.debug("[closeDeckSelection] Closed deck selection")}catch(e){console.error("[closeDeckSelection] Error:",e)}}document.getElementById("saveCollection").addEventListener("click",()=>{try{localStorage.setItem("collection",JSON.stringify(u)),alert("Collection saved!"),console.debug("[saveCollection] Collection saved")}catch(e){console.error("[saveCollection] Error:",e)}});const I=document.getElementById("createDeckForm");I&&I.addEventListener("submit",e=>{e.preventDefault();const t=document.getElementById("deckName").value.trim();P(t),document.getElementById("deckName").value=""});document.addEventListener("DOMContentLoaded",()=>{try{g(),b(),console.debug("[DOMContentLoaded] Initial render complete")}catch(e){console.error("[DOMContentLoaded] Error:",e)}});document.querySelectorAll(".tab-button").forEach(e=>{e.addEventListener("click",()=>{try{document.querySelectorAll(".tab-button").forEach(c=>c.classList.remove("active")),e.classList.add("active"),document.querySelectorAll(".tab-content.active").forEach(c=>{c.classList.remove("active"),setTimeout(()=>{c.style.display="none"},400)});const t=e.getAttribute("data-tab"),s=document.getElementById(t);if(s&&(s.style.display="block",s.offsetWidth,s.classList.add("active")),t==="collection")typeof g=="function"&&g();else if(t==="decks")typeof b=="function"&&b();else{const c=document.getElementById("collectionContent");c&&(c.innerHTML="")}console.debug("[TabSwitch] Switched to tab:",t)}catch(t){console.error("[TabSwitch] Error:",t)}})});document.addEventListener("DOMContentLoaded",()=>{var e;try{const t=localStorage.getItem("apiKey");t&&(document.getElementById("apiKey").value=t),(e=document.querySelector(".tab-button.active"))==null||e.click(),console.debug("[DOMContentLoaded] Loaded API key and activated tab")}catch(t){console.error("[DOMContentLoaded] Error:",t)}});document.getElementById("settingsForm").addEventListener("submit",e=>{e.preventDefault();try{const t=document.getElementById("apiKey").value.trim();if(t){localStorage.setItem("apiKey",t),document.getElementById("settingsMessage").textContent="Settings saved successfully!";const s=document.getElementById("apiKeyAlert");s&&s.remove(),setTimeout(()=>{document.getElementById("settingsMessage").textContent=""},3e3),console.debug("[settingsForm] API key saved")}}catch(t){console.error("[settingsForm] Error:",t)}});window.addToCollection=B;window.removeFromCollection=q;window.showDeckSelection=O;window.closeInfoBox=x;window.addToDeck=T;window.closeDeckSelection=S;window.removeFromDeck=N;window.deleteDeck=F;window.renderDeckList=b;
